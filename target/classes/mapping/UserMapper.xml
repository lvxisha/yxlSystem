<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuan.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.yuan.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="jf" property="jf" jdbcType="INTEGER" />
    <result column="tp" property="tp" jdbcType="INTEGER" />
    <result column="logintimes" property="logintimes" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, name, sex, tel, idcard, enabled, role_id, jf, tp, logintimes, address
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yuan.model.User" >
    insert into user (id, username, password, 
      name, sex, tel, idcard, 
      enabled, role_id, jf, tp, 
      logintimes, address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{tel,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=BIT}, #{roleId,jdbcType=INTEGER}, #{jf,jdbcType=INTEGER}, #{tp,jdbcType=INTEGER}, 
      #{logintimes,jdbcType=INTEGER}, #{
address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yuan.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="jf != null" >
        jf,
      </if>
      <if test="tp != null" >
        tp,
      </if>
      <if test="logintimes != null" >
        logintimes,
      </if>
      <if test="address != null" >
        
address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="jf != null" >
        #{jf,jdbcType=INTEGER},
      </if>
      <if test="tp != null" >
        #{tp,jdbcType=INTEGER},
      </if>
      <if test="logintimes != null" >
        #{logintimes,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{
address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuan.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="jf != null" >
        jf = #{jf,jdbcType=INTEGER},
      </if>
      <if test="tp != null" >
        tp = #{tp,jdbcType=INTEGER},
      </if>
      <if test="logintimes != null" >
        logintimes = #{logintimes,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuan.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      tel = #{tel,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      role_id = #{roleId,jdbcType=INTEGER},
      jf = #{jf,jdbcType=INTEGER},
      tp = #{tp,jdbcType=INTEGER},
      logintimes = #{logintimes,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 根据用户账号查询用户信息 -->
  <select id="getUserByUsername" resultMap="BaseResultMap" parameterType="String" >
	SELECT
		<include refid="Base_Column_List" />
	FROM
		user
	WHERE
		username = #{username}
  </select>
   <!-- 根据身份证号查询用户信息 -->
  <select id="getUserByIdcard" resultMap="BaseResultMap" parameterType="String" >
	SELECT
		<include refid="Base_Column_List" />
	FROM
		user
	WHERE
		idcard = #{idcard}
  </select>
  
    <update id="updateUserTpJf" parameterType="com.yuan.model.entity.UpdateJfTp" >
    update user
    set
      <if test="choice==true"> 
      jf=jf-#{seatJf},
      </if>
      <if test="choice==false"> 
      jf=jf+#{seatJf}
      </if>
      <if test="choice==true">
      tp = tp+1
      </if>
    where id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>